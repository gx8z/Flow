name: Create Flow for Messenger app

on:
  workflow_dispatch:
    inputs:
      ipa_url:
        description: "URL to the decrypted IPA file"
        default: ""
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "build"
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Main
        uses: actions/checkout@v5.0.0
        with:
          path: main
          submodules: recursive

      - name: Download and validate IPA
        run: |
          wget "${{ inputs.ipa_url }}" --no-verbose -O ${{ github.workspace }}/messenger.ipa

          file_type=$(file --mime-type -b ${{ github.workspace }}/messenger.ipa)

          if [[ "$file_type" != "application/x-ios-app" && "$file_type" != "application/zip" ]]; then
            echo "::error::Validation failed: The downloaded file is not a valid IPA. Detected type: $file_type."
            exit 1
          fi

      - name: Install Dependencies
        run: brew install make ldid

      - name: Set PATH environment variable
        run: echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH

      - name: Install cyan
        run: pipx install --force https://github.com/asdfzxcvbn/pyzule-rw/archive/main.zip

      - name: Download Flow for Messenger
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag_name=$(gh release view --repo dayanch96/Flow --json tagName --jq ".tagName")
          file_name=$(gh release view --repo dayanch96/Flow --json assets --jq ".assets[0].name")

          echo "FLOW_TAG=$tag_name" >> $GITHUB_ENV
          echo "Downloading: $file_name"
          gh release download --repo dayanch96/Flow --pattern $file_name --output ${{ github.workspace }}/flow_fbm.deb

      - name: Inject tweaks into IPA
        run: cyan -i messenger.ipa -o Flow_FBM_${{ env.FLOW_TAG }}.ipa -uwef flow_fbm.deb -s

      - name: Strip embedded Swift dylibs
        run: |
          unzip -q Flow_FBM_${{ env.FLOW_TAG }}.ipa -d tmp_payload
          find tmp_payload/Payload/*.app/ -name "libswift*.dylib" -print -delete
          cd tmp_payload
          zip -qr ../Flow_FBM_${{ env.FLOW_TAG }}_clean.ipa Payload
          cd ..
          mv Flow_FBM_${{ env.FLOW_TAG }}_clean.ipa Flow_FBM_${{ env.FLOW_TAG }}.ipa

      - name: Publish Draft Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create \
            flow-fbm-${{ env.FLOW_TAG }} \
            Flow_FBM_${{ env.FLOW_TAG }}.ipa \
            --repo $GITHUB_REPOSITORY \
            --draft \
            --title "Flow_FBM ${{ env.FLOW_TAG }}"

      - name: Output Release URL
        run: |
          echo "::notice::Release available at: https://github.com/${{ github.repository }}/releases"
